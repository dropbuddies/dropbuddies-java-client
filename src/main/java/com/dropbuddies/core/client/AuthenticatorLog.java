/**
 * DropBuddies API
 * An API for Dropbuddies on-demand delivery service
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apisupport@dropbuddies.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package com.dropbuddies.core.client;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;


/**
 * AuthenticatorLog
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-02-10T00:00:58.629+01:00")
public class AuthenticatorLog   {
  @SerializedName("id")
  private Long id = null;

  @SerializedName("created_on")
  private Long createdOn = null;

  @SerializedName("updated_on")
  private Long updatedOn = null;

  @SerializedName("expires_on")
  private Long expiresOn = null;

  @SerializedName("jwt_token")
  private String jwtToken = null;

  @SerializedName("source")
  private String source = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("ownerid")
  private String ownerid = null;

  @SerializedName("owner_type")
  private String ownerType = null;

  @SerializedName("access_token")
  private String accessToken = null;

  @SerializedName("device")
  private String device = null;

  public AuthenticatorLog id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public AuthenticatorLog createdOn(Long createdOn) {
    this.createdOn = createdOn;
    return this;
  }

   /**
   * Get createdOn
   * @return createdOn
  **/
  @ApiModelProperty(example = "null", value = "")
  public Long getCreatedOn() {
    return createdOn;
  }

  public void setCreatedOn(Long createdOn) {
    this.createdOn = createdOn;
  }

  public AuthenticatorLog updatedOn(Long updatedOn) {
    this.updatedOn = updatedOn;
    return this;
  }

   /**
   * Get updatedOn
   * @return updatedOn
  **/
  @ApiModelProperty(example = "null", value = "")
  public Long getUpdatedOn() {
    return updatedOn;
  }

  public void setUpdatedOn(Long updatedOn) {
    this.updatedOn = updatedOn;
  }

  public AuthenticatorLog expiresOn(Long expiresOn) {
    this.expiresOn = expiresOn;
    return this;
  }

   /**
   * Get expiresOn
   * @return expiresOn
  **/
  @ApiModelProperty(example = "null", value = "")
  public Long getExpiresOn() {
    return expiresOn;
  }

  public void setExpiresOn(Long expiresOn) {
    this.expiresOn = expiresOn;
  }

  public AuthenticatorLog jwtToken(String jwtToken) {
    this.jwtToken = jwtToken;
    return this;
  }

   /**
   * Get jwtToken
   * @return jwtToken
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getJwtToken() {
    return jwtToken;
  }

  public void setJwtToken(String jwtToken) {
    this.jwtToken = jwtToken;
  }

  public AuthenticatorLog source(String source) {
    this.source = source;
    return this;
  }

   /**
   * Get source
   * @return source
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getSource() {
    return source;
  }

  public void setSource(String source) {
    this.source = source;
  }

  public AuthenticatorLog status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public AuthenticatorLog ownerid(String ownerid) {
    this.ownerid = ownerid;
    return this;
  }

   /**
   * Get ownerid
   * @return ownerid
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public String getOwnerid() {
    return ownerid;
  }

  public void setOwnerid(String ownerid) {
    this.ownerid = ownerid;
  }

  public AuthenticatorLog ownerType(String ownerType) {
    this.ownerType = ownerType;
    return this;
  }

   /**
   * Get ownerType
   * @return ownerType
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public String getOwnerType() {
    return ownerType;
  }

  public void setOwnerType(String ownerType) {
    this.ownerType = ownerType;
  }

  public AuthenticatorLog accessToken(String accessToken) {
    this.accessToken = accessToken;
    return this;
  }

   /**
   * Get accessToken
   * @return accessToken
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getAccessToken() {
    return accessToken;
  }

  public void setAccessToken(String accessToken) {
    this.accessToken = accessToken;
  }

  public AuthenticatorLog device(String device) {
    this.device = device;
    return this;
  }

   /**
   * Get device
   * @return device
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getDevice() {
    return device;
  }

  public void setDevice(String device) {
    this.device = device;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AuthenticatorLog authenticatorLog = (AuthenticatorLog) o;
    return Objects.equals(this.id, authenticatorLog.id) &&
        Objects.equals(this.createdOn, authenticatorLog.createdOn) &&
        Objects.equals(this.updatedOn, authenticatorLog.updatedOn) &&
        Objects.equals(this.expiresOn, authenticatorLog.expiresOn) &&
        Objects.equals(this.jwtToken, authenticatorLog.jwtToken) &&
        Objects.equals(this.source, authenticatorLog.source) &&
        Objects.equals(this.status, authenticatorLog.status) &&
        Objects.equals(this.ownerid, authenticatorLog.ownerid) &&
        Objects.equals(this.ownerType, authenticatorLog.ownerType) &&
        Objects.equals(this.accessToken, authenticatorLog.accessToken) &&
        Objects.equals(this.device, authenticatorLog.device);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, createdOn, updatedOn, expiresOn, jwtToken, source, status, ownerid, ownerType, accessToken, device);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AuthenticatorLog {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    createdOn: ").append(toIndentedString(createdOn)).append("\n");
    sb.append("    updatedOn: ").append(toIndentedString(updatedOn)).append("\n");
    sb.append("    expiresOn: ").append(toIndentedString(expiresOn)).append("\n");
    sb.append("    jwtToken: ").append(toIndentedString(jwtToken)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    ownerid: ").append(toIndentedString(ownerid)).append("\n");
    sb.append("    ownerType: ").append(toIndentedString(ownerType)).append("\n");
    sb.append("    accessToken: ").append(toIndentedString(accessToken)).append("\n");
    sb.append("    device: ").append(toIndentedString(device)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

